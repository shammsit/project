<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Project Collaboration Sign In</title>
    <!-- Tailwind CSS for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts for a modern, tech-style font -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=VT323&display=swap" rel="stylesheet">
    <!-- Link to external CSS file -->
    <link rel="stylesheet" href="style.css">
</head>
<body class="bg-black text-green-400">

    <!-- Animated "Matrix" Background -->
    <canvas id="matrix-background"></canvas>

    <!-- Main content container -->
    <div class="relative flex flex-col items-center justify-center min-h-screen p-4">

        <!-- Welcome Message -->
        <div class="text-center mb-8">
            <h2 class="text-2xl md:text-3xl text-white tracking-wider">Welcome to project collaboration with Shamanta Garai</h2>
        </div>

        <!-- Sign-in Form Card -->
        <div class="w-full max-w-sm bg-black bg-opacity-75 backdrop-blur-sm rounded-lg shadow-2xl shadow-green-500/10 border border-green-500/20 p-8">
            <h1 class="text-4xl text-center font-bold mb-6 tracking-widest">SIGN IN</h1>
            <form id="signin-form">
                <!-- Username Input -->
                <div class="mb-4">
                    <input type="text" placeholder="Username" class="w-full bg-gray-800 border border-gray-700 text-white rounded-md px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 placeholder-gray-500 text-lg">
                </div>
                <!-- Password Input -->
                <div class="mb-6">
                    <input type="password" placeholder="Password" class="w-full bg-gray-800 border border-gray-700 text-white rounded-md px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 placeholder-gray-500 text-lg">
                </div>

                <!-- Captcha Verification Section -->
                <div class="captcha-container">
                    <span id="captcha-text"></span>
                    <button type="button" id="captcha-refresh" title="Refresh Captcha">&#x21bb;</button>
                </div>
                <div class="mb-6">
                     <input type="text" id="captcha-input" placeholder="Enter Captcha" class="w-full bg-gray-800 border border-gray-700 text-white rounded-md px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 placeholder-gray-500 text-lg">
                </div>


                <!-- Links: Forgot Password and Signup -->
                <div class="flex justify-between items-center mb-6 text-sm">
                    <a href="#" class="text-red-500 hover:text-red-400 transition-colors">Forgot Password</a>
                    <a href="#" class="text-green-400 hover:text-white font-bold transition-colors">Signup</a>
                </div>
                <!-- Login Button -->
                <div>
                    <button type="submit" class="w-full bg-green-500 hover:bg-green-600 text-black text-xl font-bold py-3 rounded-md transition-all duration-300 ease-in-out transform hover:scale-105 shadow-lg shadow-green-500/20">
                        Login
                    </button>
                </div>
            </form>
        </div>
        <!-- Message for incorrect captcha -->
        <div id="error-message" class="mt-4 text-red-500 text-center hidden">Incorrect Captcha. Please try again.</div>
    </div>

    <script>
        // --- Matrix Background Animation Script ---
        const canvas = document.getElementById('matrix-background');
        const ctx = canvas.getContext('2d');

        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        const characters = '01';
        const columns = Math.floor(canvas.width / 20);
        const drops = [];

        // Initialize drops array with random y-positions
        for (let x = 0; x < columns; x++) {
            drops[x] = Math.floor(Math.random() * canvas.height);
        }

        function drawMatrix() {
            // Create a semi-transparent black rectangle to create the fading effect
            ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            ctx.fillStyle = '#0F0'; // Green color for the characters
            ctx.font = '15pt VT323';

            for (let i = 0; i < drops.length; i++) {
                const text = characters.charAt(Math.floor(Math.random() * characters.length));
                ctx.fillText(text, i * 20, drops[i] * 20);

                // Reset drop to the top randomly to make the rain effect uneven
                if (drops[i] * 20 > canvas.height && Math.random() > 0.975) {
                    drops[i] = 0;
                }
                drops[i]++;
            }
        }

        // Set interval to draw the animation
        setInterval(drawMatrix, 50);

        // --- Captcha Generation and Validation Script ---
        const captchaTextElement = document.getElementById('captcha-text');
        const captchaInputElement = document.getElementById('captcha-input');
        const captchaRefreshButton = document.getElementById('captcha-refresh');
        const signinForm = document.getElementById('signin-form');
        const errorMessage = document.getElementById('error-message');
        let captchaString = '';

        function generateCaptcha() {
            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            captchaString = '';
            for (let i = 0; i < 6; i++) {
                captchaString += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            captchaTextElement.textContent = captchaString;
            captchaInputElement.value = ''; // Clear previous input
            errorMessage.classList.add('hidden'); // Hide error message
        }

        // Event listener for the refresh button
        captchaRefreshButton.addEventListener('click', generateCaptcha);

        // Event listener for form submission
        signinForm.addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent the form from submitting normally
            
            // Validate captcha
            if (captchaInputElement.value.toLowerCase() === captchaString.toLowerCase()) {
                // On success, you would typically submit the form to the server
                alert('Captcha Verified! Logging in...');
                // signinForm.submit(); // Uncomment this line to submit the form
            } else {
                // On failure, show an error message and generate a new captcha
                errorMessage.classList.remove('hidden');
                generateCaptcha();
            }
        });

        // Generate the first captcha when the page loads
        window.onload = function() {
            generateCaptcha();
            // Handle window resizing for the canvas
            window.addEventListener('resize', () => {
                canvas.width = window.innerWidth;
                canvas.height = window.innerHeight;
                // Re-initialize drops on resize if needed, though not strictly necessary for this effect
            });
        };

    </script>
</body>
</html>
